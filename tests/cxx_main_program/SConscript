# Run the alltypes test case, but compile it as C++ instead.
# In fact, compile the entire nanopb using C++ compiler.

Import("env")

# Copy the files to .cxx extension in order to force C++ build.
c = Copy("$TARGET", "$SOURCE")
Command("pb_encode.cxx", "#../pb_encode.c", c)
Command("pb_decode.cxx", "#../pb_decode.c", c)
Command("alltypes.pb.h", "#alltypes/alltypes.pb.h", c)
Command("alltypes.pb.cxx", "#alltypes/alltypes.pb.c", c)
Command("encode_alltypes.cxx", "#alltypes/encode_alltypes.c", c)
Command("decode_alltypes.cxx", "#alltypes/decode_alltypes.c", c)

# Now build and run the test normally.
env.Program(["encode_alltypes.cxx", "alltypes.pb.cxx", "pb_encode.cxx"])
env.Program(["decode_alltypes.cxx", "alltypes.pb.cxx", "pb_decode.cxx"])

env.RunTest("encode_alltypes")
env.RunTest(["decode_alltypes", "encode_alltypes.output"])
